@using TGIS.Models;
@{
    ViewBag.Title = "Test";
    Player player = (Player)ViewBag.Player;
    List<string> teamIDs = (List<string>)ViewBag.TeamIDs;
    TGISDBEntities db = new TGISDBEntities();
    var teams = db.Teams;
}
@*
    包含所有聊天室的容器是class = "chatArea"
        單個聊天室外殼需有class="chatBox"，以下兩區塊被包含在其中
            訊息顯示區需有class="msgDisplay"
            訊息輸入區需有class="msgInput"
*@
<style>
    .chatArea {
        position: fixed;
        bottom: 0px;
        right: 50px;
        z-index: 999;
        box-shadow:1px 1px 3px #005E28;
    }

    .msgDisplay {
        overflow-y: auto;
        height: 300px;
        background-color: white;
    }

    .bg-msg {
        background-color: #C9EAC9;
    }

    .bg-tab {
        background-color: #D6F8D6;
    }

    .bg-gray {
        background-color: #E1EAE3;
    }

    .list-group-item-action:focus, .list-group-item-action:hover {
        background-color: #E8F7E8;
    }

    .list-group-item.active {
        background-color: #7FC6A4;
        border-color: #7FC6A4;
    }

    .title-msg {
        color: #7FC6A4;     
    }

        .title-msg:hover {
            text-decoration: none;
            color: #005E28;
        }
</style>
<div class="bg-tab chatArea pl-3 pr-3">
    <div id="title-clo" class="mt-2 mb-2">
        <a data-toggle="collapse" href="#msg" aria-controls="msg" role="button" aria-expanded="false" class="title-msg">
            <i class="far fa-comment-alt"></i><sapn class="ml-1">揪桌訊息</sapn>
        </a>
    </div>
    @{
        Team team;
        <div class="row collapse" id="msg">
            <div class="col-12 d-flex justify-content-between mt-2 mb-2">
                    <sapn>揪桌訊息</sapn>
                <a data-toggle="collapse" href="#msg" aria-controls="msg" role="button" aria-expanded="false" class="title-msg" id="title-opn">
                    <i class="fas fa-minus"></i>
                </a>
            </div>
            <div class="col-4 p-0 bg-gray">
                <div class="list-group" id="list-tab" role="tablist">
                    @{ string active = "active";}
                    @foreach (string id in teamIDs)
                    {
                        team = teams.Find(id);
                        <a class="list-group-item list-group-item-action chatbtn bg-tab @active" id="msg_@team.ID-list" data-toggle="list" href="#msg_@team.ID" role="tab" aria-controls="msg_@team.ID">@team.Title</a>
                        active = "";
                    }
                </div>
            </div>
            <div class="col-8 p-0">
                <div class="tab-content card" id="nav-tabContent">
                    @{ active = "show active";}
                    @foreach (string id in teamIDs)
                    {
                        team = teams.Find(id);
                        <div class="chatBox tab-pane fade @active" id="msg_@team.ID" role="tabpanel" aria-labelledby="msg_@team.ID-list">
                            <div class="card-header bg-msg">
                                <div class="">@team.Title</div>
                            </div>
                            <div class="card-body msgDisplay">
                                @* 顯示歷史訊息 *@
                                @foreach (Message m in team.Messages)
                                {
                                    <p class="small mb-0">@db.Players.Find(m.Speaker).NickName：</p>
                                    <p class="mt-0">@m.Content</p>
                                }
                            </div>
                            <div class="card-footer input-group bg-msg">
                                <div class="input-group-prepend">
                                    <div class="input-group-text" id="btnGroupAddon">
                                        <i class="far fa-comment-dots"></i>
                                    </div>
                                </div>
                                <input type="text" class="form-control msgInput" aria-describedby="btnGroupAddon">
                            </div>
                        </div>
                        active = "";
                    }
                </div>
            </div>
        </div>

    }
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
        /*
     *  作法：
     *  登入後依據此玩家的隊伍數量建立訊息窗口
     *  每個窗口都建立各自的websocket
     *  每個輸入框也使用各自的websocket來使用send方法
     */
    var c = console.log;
    //將此玩家的teamIDs(C#)轉換為JS陣列
    var teamIDs = [];
    @foreach(string id in teamIDs)
    {
        @: teamIDs.push("@id");
    }
    //取得所有.chatBox
    var boxes = $(".chatBox");
    for (var i = 0; i < teamIDs.length; i++) {
        //要使用let建立局部變量才不會相互衝突
        let chatBox = boxes.eq(i);
        let url = `ws://localhost:55525/api/TeamChat?userName=@player.NickName&teamID=${teamIDs[i]}&userID=@player.ID`;
        let ws = new WebSocket(url);

        ws.onopen = function (e) {
        }
        ws.onmessage = function (e) {
            var msgDisplay = chatBox.find(".msgDisplay");
            msgDisplay.append(`<p>${e.data}</p>`);
            msgDisplay.scrollTop(msgDisplay.get(0).scrollHeight);
        }

        //在輸入框中按下Enter送出訊息
        chatBox.find(".msgInput").keypress(function (e) {
            if (e.keyCode == 13) {
                //輸入不為空白才送出訊息
                if ($(this).val().trim().length > 0)
                    ws.send($(this).val());
                //清空輸入框
                $(this).val("");
            }
        });
    }
    //按完標題切換聊天內容
    $('.chatbtn').click(function () {
        $('.chatbtn').RemoveClass("active");
        $(this).AddClass("active");
        $('.chatBox').toggleClass("show active");

    });
        //摺疊鈕變化
    $('#title-clo').click(function () {
        $(this).css("display", "none");
    });
    $('#title-opn').click(function () {
        $('#title-clo').css("display", "block");
    });

</script>
