@using TGIS.Models;
@model Team


@{
    ViewBag.Title = "新開一桌";
    Layout = "~/Views/Shared/_LayoutPlayerCenter.cshtml";
    //取得嘗試輸入的資料的函數，用於輸入錯誤時保留輸入值
    string GetMSData(string name)
    {
        var state = ViewData.ModelState[name];
        return state == null ? "" : state.Value.AttemptedValue;
    }
    TGISDBEntities db = new TGISDBEntities();
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container form-horizontal">
        <h2>新開一桌</h2>
        <hr />

        <div class="row form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-2" })
            <div class="col-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-group">
            <label class="control-label col-2">遊玩時間</label>
            <div class="col-5">
                @Html.EditorFor(model => model.PlayDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayDate, "", new { @class = "text-danger" })
            </div>
            <p>－</p>
            <div class="col-2">
                @Html.EditorFor(model => model.PlayBeginTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayBeginTime, "", new { @class = "text-danger" })
            </div>
            <p>～</p>
            <div class="col-2">
                @Html.EditorFor(model => model.PlayEndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayEndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-group">
            <label class="control-label col-2 mr-3">遊玩地點</label>
            @Html.DropDownList("CityID", null, new { @class = "form-control d-inline col-2 mr-3" })
            @Html.DropDownList("DistrictID", null, new { @class = "form-control d-inline col-2 mr-5" })
            <label class="control-label col-1">店家</label>
            @* 這個<select>是等DistrictID選好後才填入<option> *@
            <select name="ShopID" id="ShopID" class="form-control col-3">
            </select>
            @Html.ValidationMessageFor(model => model.ShopID, "", new { @class = "text-danger" })
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.ParticipateEndDate, htmlAttributes: new { @class = "control-label col-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ParticipateEndDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.ParticipateEndDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-group">
            <label class="control-label col-2 mr-3">遊玩形式</label>
            <select id="Preference" name="Preference" class="form-control col-4">
                <option value="">不限遊戲種類</option>
                @{
                    string tableGameID = GetMSData("Preference");
                    foreach (TableGame game in db.TableGames)
                    {
                        if (game.ID == tableGameID)
                        {
                            <option value="@game.ID" selected>@game.ChineseName</option>
                        }
                        else
                        {
                            <option value="@game.ID">@game.ChineseName</option>
                        }
                    }
                }
            </select>
            <div class="col-5">
                <input id="searchInput" class="form-control w-50 d-inline" placeholder="輸入想搜尋的遊戲" />
                <button id="searchBtn" class="btn btn-info mb-2">搜尋</button>
            </div>
        </div>
        <div class="row form-group">
            <label class="control-label col-2 mr-3">遊玩人數</label>
            @Html.EditorFor(model => model.MinPlayer, new { htmlAttributes = new { @class = "form-control d-inline col-1 mr-3", min = "2", max = "50" } })
            <p>至</p>
            @Html.EditorFor(model => model.MaxPlayer, new { htmlAttributes = new { @class = "form-control d-inline col-1 ml-3 mr-3", min = "2", max = "50" } })
            <p>人</p>
            <div class="col-1 mr-5"></div>
            @Html.LabelFor(model => model.EstimatedCost, htmlAttributes: new { @class = "control-label col-1 ml-4" })
            @Html.EditorFor(model => model.EstimatedCost, new { htmlAttributes = new { @class = "form-control d-inline col-1 mr-3" } })

            <p>元</p>

        </div>
        <div class="row">
            <div class="col-6">
                @* 手打超過的數的話,因為是系統觸發警示所以是英文 *@
                @Html.ValidationMessageFor(model => model.MinPlayer, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.MaxPlayer, "", new { @class = "text-danger" })
            </div>
            <div class="col-6">
                @Html.ValidationMessageFor(model => model.EstimatedCost, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--use TextArea type-->
        <div class="row form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", style = "resize: none;height:200px" })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Submit btn-->
        <br />
        <div class="row form-group justify-content-center">
            @Html.ActionLink("取消", "MyTeam", "Team", new { @class = "btn btn-secondary mr-1" })
            <input type="submit" value="開團" class="btn btn-info ml-1" />
        </div>
    </div>
}

@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/address.js"></script>
    <script src="~/Scripts/confirmBeforeExitEditor.js"></script>
    <script>
        //通過行政區找到店家：
        //1. 取得行政區的ID值
        //2. 用ajax傳出此ID
        //3. controller找到對應的行政區
        //4. 找到該行政區下的所有店家
        //5. 將這些店家渲染成列表提供選擇 value=店家ID，顯示為店家名稱
        $("#DistrictID").change(getShopOption);
        $("#CityID").change(function () {
            //因為城市的改變會先刷新行政區選項，需要稍微延時後再觸發getShopOption才有效
            setTimeout(getShopOption, 100);
        })
        //剛進入頁面時就先刷新
        getShopOption();
        function getShopOption() {
            var id = $("#DistrictID").val();
            $.post("/Shop/GetShopSelectList", { districtID: id, shopID: "@GetMSData("ShopID")" }, function (data) {
                $("#ShopID").html(data);
            })

            setTimeout(GetTableGameInShop, 1000);
        }


        //從輸入框搜尋桌遊
        $("#searchBtn").click(function () {
            var tgName = $("#searchInput").val();

            if (tgName != null) {

            $('#Preference').empty().append(ListForSel[0]);
            for (i = 1; i < TGList.length; i++) {
                if (TGList[i].indexOf(tgName) != -1) {
                    $('#Preference').append(ListForSel[i]);
                }
            }
            $('#Preference option:first').attr('selected','selected');
                }

            //避免送出表單(請勿刪除)
            return false;
        })


        //取得所有桌遊

        var Preference = document.getElementById('Preference');

        const TGList = [], ListForSel = [];
        GetTGList();
        function GetTGList() {
            for (i = 0; i < Preference.length; i++) {
                TGList[i] = Preference.options[i].text;
                ListForSel[i] = Preference[i];
             }
        }


        //取得店內桌遊

        $('#ShopID').change(GetTableGameInShop);

        function GetTableGameInShop() {
            $.post("/TableGameInShopDetail/GetTableGameInShopJson", { shopID: $("#ShopID").val() }, function (data) {

                var GetTGInShop = [];

                //抓GetTableGameInShopJson ChineseName 字串
                for (index = 0; index < data.length; index++) {
                    GetTGInShop[index] = data[index].ChineseName;
                }
                $('#Preference').empty().append(ListForSel);
                ChangeTGList(GetTGInShop);
            }
        )}

        //改變桌遊列表

        function ChangeTGList(GetTGInShop) {
                for (i = 1; i < TGList.length; i++) {
                    var check = Preference.options[i];

                    if ($.inArray(TGList[i],GetTGInShop) == -1) {
                        $(check).attr('disabled',true).text(TGList[i] + '(此店家無此桌遊)');
                    } else {
                        $(check).attr('disabled',false).text(TGList[i]);
                    }
                }
        }


    </script>
}