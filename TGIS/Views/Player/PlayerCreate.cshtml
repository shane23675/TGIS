@model TGIS.Models.Player

@{
    ViewBag.Title = "PlayerCreate";
    Layout = "~/Views/Shared/_LayoutPlayer.cshtml";
}


    <link href="~/Content/croppie.css" rel="stylesheet" />
<style>
    #crop {
        display: none;
    }
    #result{
        display:none;
    }
    #crop_close{
        display:none;
    }
</style>




<h2>Register</h2>

@using (Html.BeginForm("PlayerCreate", "Player", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Account" } })
                @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Enter Password" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Password Confirm</label>
            <div class="col-md-10">
                <input name="passwordConfirm" class="form-control" placeholder="Please enter your password again..." type="password" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
            </div>
        </div>


        <!--photo-->

    <div class="form-group">
        <label class="control-label pl-3">Your Photo</label>
        <button type="button" id="crop_close" class="btn mb-2 btn-outline-warning" onclick="cropCancel();">Reupload</button>
        <div class="crop_range">
            <div id="upload" class="col-md-10">
                <label id="filedrag">
                    <input type="file" id="photo"  accept="image/*" name="photo" />
                </label>
            </div>

            <div id="crop" class="col-md-10">
                <button type="button" class="btn btn-info" id="prev" onclick="cropCancel();">PREV</button>
                <button type="button" class="btn btn-info" id="next" onclick="cropResult();">Crop</button>
                <div id="croppie"></div>
            </div>

            <div id="result" class="col-md-10">
                <img src="" id="crop_img"/>
            </div>
        </div>
    </div>


        <!--//////////////////////////////////////////////////-->



        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @{
                        // 狀態保留
                        string maleChecked = "checked";
                        string femaleChecked = "";
                        if (ViewData.ModelState["Gender"] != null)
                        {
                            if (ViewData.ModelState["Gender"].Value.AttemptedValue == "false")
                            {
                                maleChecked = "";
                                femaleChecked = "checked";
                            }
                        }
                    }
                    <input type="radio" name="Gender" value="true" @maleChecked /> Male
                    <input type="radio" name="Gender" value="false" @femaleChecked /> Female
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.District.City.CityName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CityID", null, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.District.DistrictName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DistrictID", null, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Cancel", "Index", "Home")
</div>
@section scripts{
    
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/address.js"></script>

<script src="~/Scripts/croppie.js"></script>
<script src="~/Scripts/mineCrop.js"></script>

<script>
    $('#Account').blur(function () {
        account = $('#Account').val();
        $.post("/ajax/AccountRepeat", { val: account, tableName: "Shops", property: "Account" }, confirm)
    });
    function confirm(e) {
        $('#confirm1').text(e)
    };


</script>
}